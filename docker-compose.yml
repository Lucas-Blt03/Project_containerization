services:
  # Auth Backend (Node.js)
  backend-auth:
    build: ./backend-auth
    container_name: backend-auth
    env_file:
      - ./backend-auth/.env
    depends_on:
      db-auth:
        condition: service_healthy
    ports:
      - "5000:5000"
    networks:
      - event-network

  # Auth Database (PostgreSQL)
  db-auth:
    image: postgres:15
    container_name: db-auth
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: authdb
    volumes:
      - db-auth-data:/var/lib/postgresql/data
      - ./databases/auth_init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - event-network
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "user" ]
      interval: 5s
      retries: 5
      timeout: 3s

  # Events Backend (Python)
  backend-events:
    build: ./backend-events
    container_name: backend-events
    env_file:
      - ./backend-events/.env
    depends_on:
      db-events:
        condition: service_healthy
    ports:
      - "8000:8000"
    networks:
      - event-network

  # Events Database (PostgreSQL)
  db-events:
    image: postgres:15
    container_name: db-events
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: eventsdb
    volumes:
      - db-events-data:/var/lib/postgresql/data
    networks:
      - event-network
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "user" ]
      interval: 5s
      retries: 5
      timeout: 3s

volumes:
  db-auth-data:
  db-events-data:

networks:
  event-network:
    external: true